package ufutil

import (
	"encoding/json"
	"runtime/debug"
	"testing"
)

func TestLogin(t *testing.T) {
	loginer := Usuario{
		Usuario: "",
		Senha:   "",
	}
	a, err := Login(loginer)
	if err != nil {
		t.Fatal(err)
	}
	t.Log(a.Cpf, a.Nome)
}

func TestDecifrarComoTexto(t *testing.T) {
	a, err := decryptJsonAsString("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")
	if err != nil {
		t.Fatalf("failed: %v", err)
	}
	t.Log(a)
}

func TestDecifrarComoStruct(t *testing.T) {
	a, err := decryptJSON("")
	if err != nil {
		t.Fatalf("failed: %v", err)
	}
	t.Log(a)
}

func TestCardapioCampi(t *testing.T) {
	a, err := CardapioDoDiaTodosCampi()
	if err != nil {
		t.Fatal(err)
	}
	t.Log(a)
}

func TestValidarId(t *testing.T) {
	v, err := ValidarIdUfu("https://www.sistemas.ufu.br/valida-ufu/#/id-digital/XXX")
	if err != nil {
		debug.PrintStack()
		t.Fatal(err)
	}
	e, _ := json.Marshal(v)
	t.Logf("%s", e)
}
